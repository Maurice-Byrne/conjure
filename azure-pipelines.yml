
trigger:
- master
- coverage

jobs:
- job: Conjure
  timeoutInMinutes: 0
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-latest'
        runTests: true
        coverage: false
      Mac:
        imageName: 'macos-latest'
        runTests: true
        coverage: false
      Windows:
        imageName: 'vs2017-win2016'
        runTests: false
        coverage: false
      CodeCoverage:
        imageName: 'ubuntu-latest'
        runTests: true
        coverage: true
  pool:
    vmImage: $(imageName)
  steps:
  - bash: BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} COVERAGE=$(coverage) BUILD_TESTS=true make
    displayName: "Build Conjure"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-minion.sh ; fi
    displayName: "Install Minion"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-glucose.sh ; fi
    displayName: "Install Glucose"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} COVERAGE=$(coverage) LIMIT_TIME=5 make test ; fi
    displayName: "Test"
  - task: DownloadSecureFile@1
    inputs:
      secureFile: azure_id_rsa
      displayName: 'Get the Github deploy key'
      condition: eq('$(coverage)', 'true')
  - bash: |
      # this is from https://cloudblogs.microsoft.com/opensource/2019/04/05/publishing-github-pages-from-azure-pipelines
      mkdir ~/.ssh && mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
      chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      git config --local user.name "Özgür Akgün"
      git config --local user.name "ozgurakgun@gmail.com"
      git clone git@github.com:conjure-cp/conjure-code-coverage.git
      mkdir -p conjure-code-coverage/latest
      cp -r .stack-work/install/*/*/*/hpc/combined/custom/* conjure-code-coverage/latest
      TODAY=$(date "+%Y-%m-%d")
      mkdir -p conjure-code-coverage/${TODAY}
      cp -r .stack-work/install/*/*/*/hpc/combined/custom/* conjure-code-coverage/${TODAY}
      cd conjure-code-coverage
      git add .
      git commit . -m "Conjure commit: https://github.com/conjure-cp/conjure/commit/$(Build.SourceVersion)"
      git push origin master
    displayName: "Upload code coverage report to Github"
    condition: eq('$(coverage)', 'true')
