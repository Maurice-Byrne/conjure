
trigger:
- master

jobs:
- job: Conjure
  timeoutInMinutes: 0
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-latest'
        runTests: true
        coverage: false
        cache1: "$(Agent.HomeDirectory)/.stack"
      Mac:
        imageName: 'macos-latest'
        runTests: true
        coverage: false
        cache1: "$(Agent.HomeDirectory)/.stack"
      Windows:
        imageName: 'vs2017-win2016'
        runTests: false
        coverage: false
        cache1: "$(Agent.HomeDirectory)\\AppData\\Local\\Programs\\stack"
      CodeCoverage:
        imageName: 'ubuntu-latest'
        runTests: true
        coverage: true
        cache1: "$(Agent.HomeDirectory)/.stack"
  pool:
    vmImage: $(imageName)
  steps:
  - task: CacheBeta@1
    inputs:
      key: $(cache1) | $(Agent.OS) | $(Agent.JobName)
      path: $(cache1)
    displayName: Cache (~/.stack)
  - bash: BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} COVERAGE=$(coverage) BUILD_TESTS=true make
    displayName: "Build Conjure"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-minion.sh ; fi
    displayName: "Install Minion"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-glucose.sh ; fi
    displayName: "Install Glucose"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} COVERAGE=$(coverage) LIMIT_TIME=5 make test ; fi
    displayName: "Test"
  - task: DownloadSecureFile@1
    inputs:
      secureFile: azure_id_rsa
      displayName: 'Get the Github deploy key'
  - bash: COVERAGE=$(coverage) SOURCE_VERSION="$(Build.SourceVersion)" etc/build/record-coverage.sh
    displayName: "Upload code coverage report to Github"
