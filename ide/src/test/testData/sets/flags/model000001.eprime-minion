MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 0
# CSE_active_eliminated_expressions = 0
# CSE_active_total_size = 0
**VARIABLES**
DISCRETE x #
{1..7}
**CONSTRAINTS**
w-inintervalset(x, [1,1,3,3,5,5,7,7])
**VARIABLES**
DISCRETE y #
{2..8}
DISCRETE z #
{3..9}
**CONSTRAINTS**
w-inintervalset(z, [3,3,5,5,7,7,9,9])
**VARIABLES**
BOOL s_ExplicitVarSizeWithFlags_Flags_00002 #
BOOL s_ExplicitVarSizeWithFlags_Flags_00003 #
BOOL s_ExplicitVarSizeWithFlags_Flags_00004 #
BOOL s_ExplicitVarSizeWithFlags_Flags_00005 #
DISCRETE s_ExplicitVarSizeWithFlags_Values_00001 #
{1..8}
DISCRETE s_ExplicitVarSizeWithFlags_Values_00002 #
{1..9}
DISCRETE s_ExplicitVarSizeWithFlags_Values_00003 #
{1..9}
DISCRETE s_ExplicitVarSizeWithFlags_Values_00004 #
{1..9}
DISCRETE s_ExplicitVarSizeWithFlags_Values_00005 #
{1..8}
DISCRETE u #
{2..8}
DISCRETE aux0 #(s_ExplicitVarSizeWithFlags_Values_00002 * s_ExplicitVarSizeWithFlags_Flags_00002)
{0..9}
DISCRETE aux1 #(s_ExplicitVarSizeWithFlags_Values_00003 * s_ExplicitVarSizeWithFlags_Flags_00003)
{0..9}
DISCRETE aux2 #(s_ExplicitVarSizeWithFlags_Values_00004 * s_ExplicitVarSizeWithFlags_Flags_00004)
{0..9}
DISCRETE aux3 #(s_ExplicitVarSizeWithFlags_Values_00005 * s_ExplicitVarSizeWithFlags_Flags_00005)
{0..8}
DISCRETE aux4 #(u-1*x)
{-5..7}
**SEARCH**
PRINT[[x],[y],[z],[s_ExplicitVarSizeWithFlags_Flags_00002],[s_ExplicitVarSizeWithFlags_Flags_00003],[s_ExplicitVarSizeWithFlags_Flags_00004],[s_ExplicitVarSizeWithFlags_Flags_00005],[s_ExplicitVarSizeWithFlags_Values_00001],[s_ExplicitVarSizeWithFlags_Values_00002],[s_ExplicitVarSizeWithFlags_Values_00003],[s_ExplicitVarSizeWithFlags_Values_00004],[s_ExplicitVarSizeWithFlags_Values_00005],[u]]
VARORDER STATIC [x, y, z, 1, s_ExplicitVarSizeWithFlags_Flags_00002, s_ExplicitVarSizeWithFlags_Flags_00003, s_ExplicitVarSizeWithFlags_Flags_00004, s_ExplicitVarSizeWithFlags_Flags_00005, 0, 0, 0, 0, s_ExplicitVarSizeWithFlags_Values_00001, s_ExplicitVarSizeWithFlags_Values_00002, s_ExplicitVarSizeWithFlags_Values_00003, s_ExplicitVarSizeWithFlags_Values_00004, s_ExplicitVarSizeWithFlags_Values_00005, 1, 1, 1, 1, u]
VARORDER AUX [x,y,z,s_ExplicitVarSizeWithFlags_Flags_00002,s_ExplicitVarSizeWithFlags_Flags_00003,s_ExplicitVarSizeWithFlags_Flags_00004,s_ExplicitVarSizeWithFlags_Flags_00005,s_ExplicitVarSizeWithFlags_Values_00001,s_ExplicitVarSizeWithFlags_Values_00002,s_ExplicitVarSizeWithFlags_Values_00003,s_ExplicitVarSizeWithFlags_Values_00004,s_ExplicitVarSizeWithFlags_Values_00005,u,aux0,aux1,aux2,aux3,aux4]
**CONSTRAINTS**
product(s_ExplicitVarSizeWithFlags_Values_00002, s_ExplicitVarSizeWithFlags_Flags_00002, aux0)
product(s_ExplicitVarSizeWithFlags_Values_00003, s_ExplicitVarSizeWithFlags_Flags_00003, aux1)
product(s_ExplicitVarSizeWithFlags_Values_00004, s_ExplicitVarSizeWithFlags_Flags_00004, aux2)
product(s_ExplicitVarSizeWithFlags_Values_00005, s_ExplicitVarSizeWithFlags_Flags_00005, aux3)
gacalldiff([x, y, z])
modulo(x,2,1)
modulo(z,2,1)
product(z, aux4, 9)
reifyimply(ineq(s_ExplicitVarSizeWithFlags_Values_00001, s_ExplicitVarSizeWithFlags_Values_00002, -1), s_ExplicitVarSizeWithFlags_Flags_00002)
reifyimply(ineq(s_ExplicitVarSizeWithFlags_Values_00002, s_ExplicitVarSizeWithFlags_Values_00003, -1), s_ExplicitVarSizeWithFlags_Flags_00003)
reifyimply(ineq(s_ExplicitVarSizeWithFlags_Values_00003, s_ExplicitVarSizeWithFlags_Values_00004, -1), s_ExplicitVarSizeWithFlags_Flags_00004)
reifyimply(ineq(s_ExplicitVarSizeWithFlags_Values_00004, s_ExplicitVarSizeWithFlags_Values_00005, -1), s_ExplicitVarSizeWithFlags_Flags_00005)
reifyimply(w-literal(s_ExplicitVarSizeWithFlags_Values_00002,1), !s_ExplicitVarSizeWithFlags_Flags_00002)
reifyimply(w-literal(s_ExplicitVarSizeWithFlags_Values_00003,1), !s_ExplicitVarSizeWithFlags_Flags_00003)
reifyimply(w-literal(s_ExplicitVarSizeWithFlags_Values_00004,1), !s_ExplicitVarSizeWithFlags_Flags_00004)
reifyimply(w-literal(s_ExplicitVarSizeWithFlags_Values_00005,1), !s_ExplicitVarSizeWithFlags_Flags_00005)
ineq(s_ExplicitVarSizeWithFlags_Flags_00003, s_ExplicitVarSizeWithFlags_Flags_00002, 0)
ineq(s_ExplicitVarSizeWithFlags_Flags_00004, s_ExplicitVarSizeWithFlags_Flags_00003, 0)
ineq(s_ExplicitVarSizeWithFlags_Flags_00005, s_ExplicitVarSizeWithFlags_Flags_00004, 0)
weightedsumleq([1,-1],[u,x],aux4)
weightedsumgeq([1,-1],[u,x],aux4)
sumleq([x,y],z)
sumgeq([x,y],z)
weightedsumleq([1,-1,-1,-1,1,1,1,1],[s_ExplicitVarSizeWithFlags_Values_00001,x,y,z,aux0,aux1,aux2,aux3],0)
weightedsumgeq([1,-1,-1,-1,1,1,1,1],[s_ExplicitVarSizeWithFlags_Values_00001,x,y,z,aux0,aux1,aux2,aux3],0)
**EOF**
